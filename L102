/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
import java.util.LinkedList;
import java.util.List;
import java.util.Queue;

public class Solution {
	    public List<List<Integer>> levelOrder(TreeNode root) {
        List<List<Integer>> result = new LinkedList<List<Integer>>();
        if(root == null) return result;
        Queue<TreeNode> currentLevel = new LinkedList<TreeNode>();
        currentLevel.add(root);
        while(!currentLevel.isEmpty())
        {
            List<Integer> layer = new LinkedList<Integer>();
            int size = currentLevel.size();
            for(int i = 0; i < size; i++)
            {
                TreeNode currentNode = currentLevel.poll();
                layer.add(currentNode.val);
                if(currentNode.left != null)
                    currentLevel.add(currentNode.left);
                if(currentNode.right != null)
                    currentLevel.add(currentNode.right);
            }
            result.add(layer);
        }
        return result;
    }
}
