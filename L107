/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
import java.util.LinkedList;
import java.util.List;
import java.util.Queue;

public class Solution {
	public List<List<Integer>> levelOrderBottom(TreeNode root) {
		List<List<Integer>> result = new LinkedList<List<Integer>>();
		Queue<TreeNode> queue = new LinkedList<TreeNode>();
		if(root == null) return result;
		queue.add(root);
		int count = 0;
		int nextCount = 1;
		while(!queue.isEmpty()){
			if(count == 0){
				count = nextCount;
				nextCount = 0;
				result.add(0, new LinkedList<Integer>());
			}
			
			TreeNode temp = queue.poll();
			count--;
			result.get(0).add(temp.val);
			
			if(temp.left != null){
				nextCount ++;
				queue.add(temp.left);
			}
			if(temp.right != null){
				nextCount ++;
				queue.add(temp.right);
			}
		}
		return result;
	}
}
